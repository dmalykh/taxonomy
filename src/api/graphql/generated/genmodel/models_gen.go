// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package genmodel

import (
	"github.com/dmalykh/taxonomy/api/graphql/model"
)

type VocabularyInput struct {
	// Vocabulary's name
	Name string `json:"name"`
	// Vocabulary's title
	Title string `json:"title"`
	// Parent vocabulary
	ParentID *int64 `json:"parentId"`
	// Vocabulary's description
	Description *string `json:"description"`
}

type EntitiesConnection struct {
	Edges    []EntitiesEdge `json:"edges"`
	PageInfo PageInfo       `json:"pageInfo"`
}

type EntitiesEdge struct {
	Cursor string      `json:"cursor"`
	Node   *EntityNode `json:"node"`
}

type EntityNode struct {
	ID        int64  `json:"id"`
	Namespace string `json:"namespace"`
}

type PageInfo struct {
	StartCursor string `json:"startCursor"`
	EndCursor   string `json:"endCursor"`
	HasNextPage *bool  `json:"hasNextPage"`
}

type TermInput struct {
	// Term's name
	Name string `json:"name"`
	// Term's title
	Title string `json:"title"`
	// Term's vocabulary
	VocabularyID int64 `json:"vocabularyId"`
	// Description
	Description *string `json:"description"`
}

type TermsConnection struct {
	Edges    []TermsEdge `json:"edges"`
	PageInfo PageInfo    `json:"pageInfo"`
}

type TermsEdge struct {
	Cursor string      `json:"cursor"`
	Node   *model.Term `json:"node"`
}
